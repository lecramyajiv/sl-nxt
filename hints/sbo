find $PKG/usr/doc/$PRGNAM-$VERSION -type f -exec chmod 0644 {} \+
find $PKG/usr/doc/$PRGNAM-$VERSION -type f -exec chown -R root:root {} \+
cp -av $CWD/{ADVANCED.md,CHANGELOG.md,BUILD.md,README-VIM.md,README.md,LICENSE} $PKG/usr/doc/$PRGNAM-$VERSION


chown [options] new_owner[:new_group] file(s)
-c report when a file change is made.
-v verbose

how to Change Owner from a Particular Ownership Only

To change ownership from a specific user (e.g., “root”) to another (e.g., “username”), where the current owner must be “root,” use the following syntax:

chown --from=root username gek1

This command ensures that ownership is changed from “master” to “root” only when the current owner is “master.” It adds an additional layer of control to ownership modifications.


to remove user from a group run

gpasswd -d username groupname

To verify whether the user has been successfully removed from the group, you can use the groups command:

groups username

Create a group with a specific GID:

groupadd -g GID groupname  [a no of 1-999 check with /etc/group]

to create a system group

groupadd -r -g GID groupname

to check if a group exists

getent group groupname

to delete a group

sudo groupdel groupname


find $PKG -print0 | xargs -0 file | grep -e "executable" -e "shared object" | grep ELF \
  | cut -f 1 -d : | xargs strip --strip-unneeded --remove-section=.comment --remove-section=.note 2> /dev/null || true


 when creating manpage dir it should be like this $PKG/usr/man/man1
gunzip -c $CWD/city.list.json.gz > $PKG/usr/doc/$PRGNAM-$VERSION/city.list.json



when git hungs up suddenly do this

This is due to git/https buffer settings.

Run this (taken from Git fails when pushing commit to github):

git config http.postBuffer 524288000


To find the md5sum of all files in a directory  while excluding hidden file  run

find . -type d -path '*/.*' -prune -o -not -name '.*' -type f -exec md5sum {} + | LC_ALL=C sort | md5sum

find . -not -path '*/.*' -type f -exec md5sum {} + | LC_ALL=C sort | md5sum

To find the mdsum of all files in a directory run

find . -name '*.ttf' -exec md5sum {} + | LC_ALL=C sort

find . -type f -exec md5sum {} + | LC_ALL=C sort


to download in parallel run

parallel --gnu -a urlfile wget


to unzip using unzip run

unzip -d $TMP/han $CWD/$SRCH.zip



error in git
error: 1435 bytes of body are still expected75 MiB | 382.00 KiB/s
fetch-pack: unexpected disconnect while reading sideband packet
fatal: early EOF
fatal: fetch-pack: invalid index-pack output
to solve this
git config --global core.compression 0
git clone --depth 1 <repo_URI>
then cd into the clone directory
git fetch --unshallow  or
git fetch --depth=2147483647
git pull --all


repo the forked clone
git checkout -b branch_name
edit the files and then
git add .
check status with
git status .
git commit -m "mesg"
git push --set-upstream origin branch_name

to sync the forked repo
first check it with git remote -v
origin  https://github.com/lecramyajiv/slackbuilds.git (fetch)
origin  https://github.com/lecramyajiv/slackbuilds.git (push)
it does not feature the original upstream  repo, https://github.com/SlackBuildsOrg/slackbuilds to remedy this
git remote add upstream https://github.com/SlackBuildsOrg/slackbuilds.git
it should now look like this
origin  https://github.com/lecramyajiv/slackbuilds.git (fetch)
origin  https://github.com/lecramyajiv/slackbuilds.git (push)
upstream        https://github.com/SlackBuildsOrg/slackbuilds.git (fetch)
upstream        https://github.com/SlackBuildsOrg/slackbuilds.git (push)
git checkout master
git fetch upstream



to print txt file run

 enscript -B -o $TMP/GPL-2.0.ps $CWD/gpl-2.0.txt


 for git slackbuilds

 VERSION=$(expr $(printf "r%s-%s" "$(git rev-list --count HEAD)" "$(git rev-parse --short HEAD)"))

 VERSION=$(expr $(printf "r%s-%s-%s" "$(git rev-list --count HEAD)" "$(git show -s --format=%ci | cut -d ' ' -f 1 | sed 's/-//g')" "$(git rev-parse --short HEAD)"))

 VERSION=$(expr $(printf "%s_%s" "$(git show -s --format=%ci | cut -d ' ' -f 1 | sed 's/-//g')" "$(git rev-parse --short HEAD)"))


to check the linked library versions use this command

 objdump -p /home/ffmpeg | grep NEEDED
